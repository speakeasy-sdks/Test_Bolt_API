// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/Test_Bolt_API/pkg/models/shared"
	"net/http"
)

type TransactionUpdateSecurity struct {
	APIKey string `security:"scheme,type=apiKey,subtype=header,name=X-API-Key"`
}

func (o *TransactionUpdateSecurity) GetAPIKey() string {
	if o == nil {
		return ""
	}
	return o.APIKey
}

type TransactionUpdateRequest struct {
	// The publicly viewable identifier used to identify a merchant division.
	XPublishableKey string `header:"style=simple,explode=false,name=X-Publishable-Key"`
	// The transaction reference
	ID                       string                          `pathParam:"style=simple,explode=false,name=id"`
	TransactionUpdateRequest shared.TransactionUpdateRequest `request:"mediaType=application/json"`
}

func (o *TransactionUpdateRequest) GetXPublishableKey() string {
	if o == nil {
		return ""
	}
	return o.XPublishableKey
}

func (o *TransactionUpdateRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *TransactionUpdateRequest) GetTransactionUpdateRequest() shared.TransactionUpdateRequest {
	if o == nil {
		return shared.TransactionUpdateRequest{}
	}
	return o.TransactionUpdateRequest
}

type TransactionUpdateResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// The transaction was successfully updated
	Transaction *shared.Transaction
}

func (o *TransactionUpdateResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *TransactionUpdateResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *TransactionUpdateResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *TransactionUpdateResponse) GetTransaction() *shared.Transaction {
	if o == nil {
		return nil
	}
	return o.Transaction
}
