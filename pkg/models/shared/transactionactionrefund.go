// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TransactionActionRefundTag string

const (
	TransactionActionRefundTagRefund TransactionActionRefundTag = "refund"
)

func (e TransactionActionRefundTag) ToPointer() *TransactionActionRefundTag {
	return &e
}

func (e *TransactionActionRefundTag) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "refund":
		*e = TransactionActionRefundTag(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TransactionActionRefundTag: %v", v)
	}
}

type TransactionActionRefund struct {
	DotTag TransactionActionRefundTag `json:".tag"`
	// A monetary amount, i.e. a base unit amount and a supported currency.
	Amount Amount `json:"amount"`
}

func (o *TransactionActionRefund) GetDotTag() TransactionActionRefundTag {
	if o == nil {
		return TransactionActionRefundTag("")
	}
	return o.DotTag
}

func (o *TransactionActionRefund) GetAmount() Amount {
	if o == nil {
		return Amount{}
	}
	return o.Amount
}
